{%- if cookiecutter.openstack_network_engine == 'ovs' %}
classes:
{%- if cookiecutter.get('local_repositories', 'False') == 'True' %}
- system.linux.system.repo_local.mcp.openstack
- system.linux.system.repo_local.mcp.extra
- system.linux.system.repo_local.saltstack.xenial
{%- else %}
- system.linux.system.repo.mcp.openstack
- system.linux.system.repo.mcp.extra
- system.linux.system.repo.saltstack.xenial
{%- endif %}
- system.neutron.gateway.cluster
- cluster.{{ cookiecutter.cluster_name }}.infra
parameters:
  _param:
    interface_mtu: 1500
    cluster_vip_address: ${_param:openstack_control_address}

    linux_system_codename: xenial
    keepalived_vip_interface: br-ctl
    keepalived_vip_virtual_router_id: 69
    primary_first_nic: {{ cookiecutter.gateway_primary_first_nic }}
    primary_second_nic: {{ cookiecutter.gateway_primary_second_nic }}
  linux:
    network:
      bridge: openvswitch
      interface:
        eth1:
          enabled: true
          type: slave
          proto: manual
          name: ${_param:primary_first_nic}
          master: bond0
        eth2:
          enabled: true
          type: slave
          proto: manual
          name: ${_param:primary_second_nic}
          master: bond0
        bond0:
          enabled: true
          proto: manual
          ovs_bridge: br-floating
          ovs_type: OVSPort
          type: bond
          use_interfaces:
          - ${_param:primary_first_nic}
          - ${_param:primary_second_nic}
          slaves: ${_param:primary_first_nic} ${_param:primary_second_nic}
          mode: active-backup
        br-floating:
          enabled: true
          type: ovs_bridge
        br-ctl:
          enabled: true
          type: ovs_port
          bridge: br-floating
          proto: static
          ovs_options: tag=${_param:control_vlan}
          address: ${_param:single_address}
          netmask: ${_param:control_network_netmask}
        {%- if cookiecutter.openstack_ovs_encapsulation_type == 'vxlan' %}
        br-mesh:
          enabled: true
          type: ovs_port
          bridge: br-floating
          proto: static
          ovs_options: tag=${_param:tenant_vlan}
          address: ${_param:tenant_address}
          netmask: ${_param:tenant_network_netmask}
        {%- elif cookiecutter.openstack_ovs_encapsulation_type == 'vlan' %}
        br-prv:
          enabled: true
          type: ovs_bridge
        floating-to-prv:
          enabled: true
          type: ovs_port
          port_type: patch
          bridge: br-floating
          peer: prv-to-floating
        prv-to-floating:
          enabled: true
          type: ovs_port
          port_type: patch
          bridge: br-prv
          peer: floating-to-prv
        {%- endif %}
{%- endif %}
