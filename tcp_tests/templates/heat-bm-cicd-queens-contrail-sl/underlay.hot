---

heat_template_version: queens

description: MCP environment for heat-bm-cicd-queens-contrail-sl

parameters:
  instance_domain:
    type: string
    default: heat-bm-cicd-queens-contrail-sl.local
  management_vlan:
    type: string
    default: 2421
  control_vlan:
    type: string
    default: 2422
  tenant_vlan:
    type: string
    default: 2423
  external_vlan:
    type: string
    default: 2424
  mcp_version:
    type: string
  env_name:
    type: string
  key_pair:
    type: string
  cfg_flavor:
    type: string
  vsrx_flavor:
    type: string
  cfg_availability_zone:
    type: string
  foundation_image:
    type: string
  foundation_flavor:
    type: string

resources:
  subnets:
    type: MCP::Subnets
    properties:
      stack_name: { get_param: "OS::stack_name" }
      env_name: { get_param: env_name }
      management_net: { list_join: ['-', [ 'system-phys', { get_param: management_vlan } ]] }
      control_net: { list_join: ['-', [ 'system-phys', { get_param: control_vlan } ]] }
      tenant_net: { list_join: ['-', [ 'system-phys', { get_param: tenant_vlan } ]] }
      external_net: { list_join: ['-', [ 'system-phys', { get_param: external_vlan } ]] }

  #flavors:
  #  type: MCP::Flavors

  cfg01_node:
    type: MCP::MasterNode
    depends_on: [subnets]
    properties:
      env_name: { get_param: env_name }
      mcp_version: { get_param: mcp_version }
      cfg01_flavor: { get_param: cfg_flavor }
      management_net: { list_join: ['-', [ 'system-phys', { get_param: management_vlan } ]] }
      control_net: { list_join: ['-', [ 'system-phys', { get_param: control_vlan } ]] }
      tenant_net: { list_join: ['-', [ 'system-phys', { get_param: tenant_vlan } ]] }
      external_net: { list_join: ['-', [ 'system-phys', { get_param: external_vlan } ]] }
      tenant_net_static_ip:
        list_join:
        - '.'
        - [ { get_attr: [subnets, tenant_net_prefix] }, '15' ]
      external_net_static_ip:
        list_join:
        - '.'
        - [ { get_attr: [subnets, external_net_prefix] }, '15' ]
      instance_name: cfg01
      instance_domain: {get_param: instance_domain}
      network: { get_attr: [subnets, network] }

  foundation_node:
    type: MCP::FoundationNode
    depends_on: [subnets]
    properties:
      env_name: { get_param: env_name }
      mcp_version: { get_param: mcp_version }
      instance_domain: {get_param: instance_domain}
      instance_name: foundation
      management_net: { list_join: ['-', [ 'system-phys', { get_param: management_vlan } ]] }
      control_net: { list_join: ['-', [ 'system-phys', { get_param: control_vlan } ]] }
      tenant_net: { list_join: ['-', [ 'system-phys', { get_param: tenant_vlan } ]] }
      external_net: { list_join: ['-', [ 'system-phys', { get_param: external_vlan } ]] }
      instance_image: { get_param: foundation_image }
      instance_flavor: {get_param: foundation_flavor}
      network: { get_attr: [subnets, network] }
      underlay_userdata: { get_file: ./underlay--user-data-foundation.yaml }
      control_net_static_ip:
        list_join:
        - '.'
        - [ { get_attr: [subnets, control_net_prefix] }, '5' ]
      tenant_net_static_ip:
        list_join:
        - '.'
        - [ { get_attr: [subnets, tenant_net_prefix] }, '5' ]
      external_net_static_ip:
        list_join:
        - '.'
        - [ { get_attr: [subnets, external_net_prefix] }, '5' ]
      instance_config_host: { get_attr: [cfg01_node, instance_address] }
outputs:
  foundation_public_ip:
    description: foundation node IP address (management)
    value:
      get_attr:
      - foundation_node
      - instance_address
...
